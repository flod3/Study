{"ast":null,"code":"import _classCallCheck from \"/home/jucheng/\\u6587\\u6863/Projects/Study/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jucheng/\\u6587\\u6863/Projects/Study/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jucheng/\\u6587\\u6863/Projects/Study/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jucheng/\\u6587\\u6863/Projects/Study/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jucheng/\\u6587\\u6863/Projects/Study/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jucheng/\\u6587\\u6863/Projects/Study/src/page/base/login.jsx\";\nimport { Form, Icon, Input, Button } from 'antd';\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(function (field) {\n    return fieldsError[field];\n  });\n}\n\nvar HorizontalLoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalLoginForm, _React$Component);\n\n  function HorizontalLoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HorizontalLoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HorizontalLoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HorizontalLoginForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // To disabled submit button at the beginning.\n      this.props.form.validateFields();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldsError = _this$props$form.getFieldsError,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched; // Only show error after a field is touched.\n\n      var userNameError = isFieldTouched('userName') && getFieldError('userName');\n      var passwordError = isFieldTouched('password') && getFieldError('password');\n      return React.createElement(Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        validateStatus: userNameError ? 'error' : '',\n        help: userNameError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        validateStatus: passwordError ? 'error' : '',\n        help: passwordError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: hasErrors(getFieldsError()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Log in\")));\n    }\n  }]);\n\n  return HorizontalLoginForm;\n}(React.Component);\n\nvar WrappedHorizontalLoginForm = Form.create({\n  name: 'horizontal_login'\n})(HorizontalLoginForm);\nReactDOM.render(React.createElement(WrappedHorizontalLoginForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), mountNode);","map":{"version":3,"sources":["/home/jucheng/文档/Projects/Study/src/page/base/login.jsx"],"names":["Form","Icon","Input","Button","hasErrors","fieldsError","Object","keys","some","field","HorizontalLoginForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","passwordError","rules","required","message","color","React","Component","WrappedHorizontalLoginForm","create","name","ReactDOM","render","mountNode"],"mappings":"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","sourcesContent":["import {\n    Form, Icon, Input, Button,\n  } from 'antd';\n  \n  function hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n  }\n  \n  class HorizontalLoginForm extends React.Component {\n    componentDidMount() {\n      // To disabled submit button at the beginning.\n      this.props.form.validateFields();\n    }\n  \n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    }\n  \n    render() {\n      const {\n        getFieldDecorator, getFieldsError, getFieldError, isFieldTouched,\n      } = this.props.form;\n  \n      // Only show error after a field is touched.\n      const userNameError = isFieldTouched('userName') && getFieldError('userName');\n      const passwordError = isFieldTouched('password') && getFieldError('password');\n      return (\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n          <Form.Item\n            validateStatus={userNameError ? 'error' : ''}\n            help={userNameError || ''}\n          >\n            {getFieldDecorator('userName', {\n              rules: [{ required: true, message: 'Please input your username!' }],\n            })(\n              <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n            )}\n          </Form.Item>\n          <Form.Item\n            validateStatus={passwordError ? 'error' : ''}\n            help={passwordError || ''}\n          >\n            {getFieldDecorator('password', {\n              rules: [{ required: true, message: 'Please input your Password!' }],\n            })(\n              <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={hasErrors(getFieldsError())}\n            >\n              Log in\n            </Button>\n          </Form.Item>\n        </Form>\n      );\n    }\n  }\n  \n  const WrappedHorizontalLoginForm = Form.create({ name: 'horizontal_login' })(HorizontalLoginForm);\n  \n  ReactDOM.render(<WrappedHorizontalLoginForm />, mountNode);"]},"metadata":{},"sourceType":"module"}